
// SnakeDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "Snake.h"
#include "SnakeDlg.h"
#include "afxdialogex.h"
#include "HelpDlg.h"
#include "HeroDlg.h"
#include <mmsystem.h>
#pragma comment( lib, "Winmm.lib" )
#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()

public:
//	afx_msg void OnPaint();
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)

//	ON_WM_PAINT()
END_MESSAGE_MAP()


// CSnakeDlg 对话框



CSnakeDlg::CSnakeDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CSnakeDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CSnakeDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CSnakeDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_UPDATE_COMMAND_UI(IDR_ABOUT, &CSnakeDlg::OnUpdateIdrAbout)
	ON_UPDATE_COMMAND_UI(IDR_EXIT_GAME, &CSnakeDlg::OnUpdateIdrExitGame)
	ON_UPDATE_COMMAND_UI(IDR_HELP, &CSnakeDlg::OnUpdateIdrHelp)
	ON_UPDATE_COMMAND_UI(IDR_HERO_LIST, &CSnakeDlg::OnUpdateIdrHeroList)
	ON_UPDATE_COMMAND_UI(IDR_LEVEL_HIGH, &CSnakeDlg::OnUpdateIdrLevelHigh)
	ON_UPDATE_COMMAND_UI(IDR_LEVEL_LOW, &CSnakeDlg::OnUpdateIdrLevelLow)
	ON_UPDATE_COMMAND_UI(IDR_LEVEL_NOR, &CSnakeDlg::OnUpdateIdrLevelNor)
	ON_UPDATE_COMMAND_UI(IDR_PLAY_MUSIC, &CSnakeDlg::OnUpdateIdrPlayMusic)
	ON_UPDATE_COMMAND_UI(IDR_START_GAME, &CSnakeDlg::OnUpdateIdrStartGame)
END_MESSAGE_MAP()


// CSnakeDlg 消息处理程序

BOOL CSnakeDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO:  在此添加额外的初始化代码
	m_main_menu.LoadMenu(IDR_MAIN_MENU);//加载主菜单

	SetMenu(&m_main_menu);//设置主菜单
	InitMenu();//初始化主菜单

	m_snake.CreateEx(WS_EX_CLIENTEDGE, _T("SNAKEMAP"), NULL, WS_VISIBLE | WS_BORDER | WS_CHILD,
		CRect(0, 0, 325, 425), this, SNAKEMAP);

	GetDlgItem(SNAKEMAP)->SetFocus();

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CSnakeDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CSnakeDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CSnakeDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}

void CSnakeDlg::InitMenu()
{
	m_main_menu.CheckMenuItem(IDR_LEVEL_LOW, MF_BYCOMMAND | MF_CHECKED);
	m_main_menu.CheckMenuItem(IDR_LEVEL_HIGH, MF_BYCOMMAND | MF_UNCHECKED);
	m_main_menu.CheckMenuItem(IDR_LEVEL_NOR, MF_BYCOMMAND | MF_UNCHECKED);
	m_main_menu.CheckMenuItem(IDR_PLAY_MUSIC, MF_BYCOMMAND | MF_UNCHECKED);
	m_bStart = TRUE;
	m_snake.SetGameLevel(GAME_LEVEL_LOW);
}
void CSnakeDlg::Help()
{
	CHelpDlg dlg;
	dlg.DoModal();
}

void CSnakeDlg::HeroList()
{
	CHeroDlg dlg;
	dlg.DoModel();
}

void CSnakeDlg::PlayBackMusic(BOOL bflg)
{
	if (bflg)
	{
		sndPlaySound("music.wav", SND_ASYNC);
		//sndPlaySound(".\\music.wav", SND_LOOP);
	}
	else
	{
		sndPlaySound("NULL", SND_PURGE);
	}
}
void CSnakeDlg::OnUpdateIdrAbout(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	CAboutDlg dlgAbout;
	dlgAbout.DoModal();//弹出对话框

}


void CSnakeDlg::OnUpdateIdrExitGame(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	CDialog::OnCancel();
}


void CSnakeDlg::OnUpdateIdrHelp(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	Help();
}


void CSnakeDlg::OnUpdateIdrHeroList(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	HeroList();
}


void CSnakeDlg::OnUpdateIdrLevelHigh(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	BOOL bCheck = (BOOL)m_main_menu.GetMenuState(IDR_LEVEL_HIGH, MF_CHECKED);
	if (!bCheck)
	{
		m_main_menu.CheckMenuItem(IDR_LEVEL_LOW, MF_BYCOMMAND | MF_UNCHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_HIGH, MF_BYCOMMAND | MF_CHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_NOR, MF_BYCOMMAND | MF_UNCHECKED);
	}
}


void CSnakeDlg::OnUpdateIdrLevelLow(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	BOOL bCheck = (BOOL)m_main_menu.GetMenuState(IDR_LEVEL_LOW, MF_CHECKED);
	if (!bCheck)
	{
		m_main_menu.CheckMenuItem(IDR_LEVEL_LOW, MF_BYCOMMAND | MF_CHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_HIGH, MF_BYCOMMAND | MF_UNCHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_NOR, MF_BYCOMMAND | MF_UNCHECKED);
	}
}


void CSnakeDlg::OnUpdateIdrLevelNor(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	BOOL bCheck = (BOOL)m_main_menu.GetMenuState(IDR_LEVEL_NOR, MF_CHECKED);
	if (!bCheck)
	{
		m_main_menu.CheckMenuItem(IDR_LEVEL_LOW, MF_BYCOMMAND | MF_UNCHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_HIGH, MF_BYCOMMAND | MF_UNCHECKED);
		m_main_menu.CheckMenuItem(IDR_LEVEL_NOR, MF_BYCOMMAND | MF_CHECKED);
	}
}


void CSnakeDlg::OnUpdateIdrPlayMusic(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	BOOL bCheck = (BOOL)m_main_menu.GetMenuState(IDR_PLAY_MUSIC, MF_CHECKED);
	if (bCheck)
	{
		m_main_menu.CheckMenuItem(IDR_PLAY_MUSIC, TBIF_COMMAND | MF_UNCHECKED);
	}
	else
	{
		m_main_menu.CheckMenuItem(IDR_PLAY_MUSIC, TBIF_COMMAND | MF_CHECKED);
	}
	PlayBackMusic(!bCheck);
}


void CSnakeDlg::OnUpdateIdrStartGame(CCmdUI *pCmdUI)
{
	// TODO:  在此添加命令更新用户界面处理程序代码
	m_snake.GameStart();
}


